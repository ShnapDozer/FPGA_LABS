reg[0] ← 0      // 0 0 00   00000000000000000000000  00000      
reg[1] ← 1      // 0 0 00   00000000000000000000001  00001   


// reg[2] ← sw_i // n 0 0 10   00000000000000000000000  00010

reg[2] ← 10 // n    0 0 00   00000000000000000001010  00010


if (reg[2] != reg[0]) PC ← PC + 12 //IF1    0 1 00 11001 00010 00000 00001100 00000

reg[3] ← 4 //                               0 0 00   00000000000000000000100  00011  
if (reg[2] < reg[3]) PC ← PC + 11 //IF2     0 1 00 11100 00010 00011 00001011 00000

reg[3] ← 1 // a                             0 0 00   00000000000000000000001  00011
reg[4] ← 1 // b                             0 0 00   00000000000000000000001  00100
reg[5] ← 3 // i                             0 0 00   00000000000000000000011  00101

//FOR1
reg[6] ← reg[4] + reg[0]    // tmp = b + 0  0 0 01 00000 00100 00000 00000000 00110            
reg[4] ← reg[3] + reg[4]    // b = a+b      0 0 01 00000 00100 00011 00000000 00100
reg[3] ← reg[6] + reg[0]    // a = tmp + 0  0 0 01 00000 00110 00000 00000000 00011

reg[5] ← reg[5] + reg[1]    // ++i          0 0 01 00000 00101 00001 00000000 00101
if (reg[5] != reg[2]) PC ← PC – 4 //FOR1    0 1 00 11001 00101 00010 11111011 00000 // Не переходит

out_o = reg[4], PC ← PC + 0 // print(b)     1 0 00 00000 00100 00000 00000000 00000

//IF1
out_o = reg[2], PC ← PC + 0 // print(0)     1 0 00 00000 00010 00000 00000000 00000

//IF2
reg[2] ← 1                  //              0 0 00   00000000000000000000001  00010 
out_o = reg[2], PC ← PC + 0 // print(1)     1 0 00 00000 00010 00000 00000000 00000